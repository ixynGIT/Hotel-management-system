/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package UI.Pages;


import UI.LoginPage.dbConnector;
import java.awt.Color;
import java.awt.HeadlessException;
import static java.lang.Math.abs;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.*;
import net.proteanit.sql.DbUtils;
import org.joda.time.Days;
import org.joda.time.LocalDate;
        
public class CheckOUT extends javax.swing.JInternalFrame {
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    final List<Object[]> originalData = new ArrayList<>();

    int mouseX;
    int mouseY;
    dbConnector dbc = new dbConnector();
    private int discountGlobal;
    public CheckOUT() {
        initComponents();

        displayData();
        storeOriginalData();

        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        
        receiptButton.setVisible(false);
        receipt.setVisible(false);        
        checkoutDiscount.setVisible(false);
        roomprice.setVisible(false);
        jTable1.setDefaultEditor(Object.class, null);
    }
    private void storeOriginalData() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            Object[] rowData = new Object[model.getColumnCount()];
            for (int j = 0; j < model.getColumnCount(); j++) {
                rowData[j] = model.getValueAt(i, j);
            }
            originalData.add(rowData);
        }
    }
    
    private void displayData(){
        String avail = "Checked IN";
        try{
            rs = dbc.getData("SELECT* FROM client where stat='"+avail+"'");
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            jTable1.removeColumn(jTable1.getColumnModel().getColumn(13));
            
        }catch(SQLException ex){
            System.out.println("Errors: "+ex.getMessage());
        }
    }
    public int getDays() throws ParseException{
        java.util.Date date1 =  new SimpleDateFormat("yyyy-MM-dd").parse(checkIN.getText());
        java.util.Date date2 =  new SimpleDateFormat("yyyy-MM-dd").parse(checkOUT.getText());
       
       LocalDate from = LocalDate.fromDateFields(date1);
       LocalDate to = LocalDate.fromDateFields(date2);
       int days = Days.daysBetween(from, to).getDays();
       if (days==0){
           days = 1;
       }
       return days;
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        rprice1 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        rtotal2 = new javax.swing.JTextField();
        fullname1 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        roomno1 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        pend = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        paid1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        paid2 = new javax.swing.JTextField();
        tprice1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        change = new javax.swing.JTextField();
        clientid1 = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        clientid = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        checkOUT = new javax.swing.JTextField();
        govno = new javax.swing.JTextField();
        checkIN = new javax.swing.JTextField();
        pendingPrice = new javax.swing.JTextField();
        rprice = new javax.swing.JTextField();
        paid = new javax.swing.JTextField();
        fullname = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        govtype = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        btn_refresh = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        rptotal = new javax.swing.JTextField();
        receiptButton = new javax.swing.JButton();
        checkOutButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        roomno = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        receipt = new javax.swing.JTextArea();
        checkoutDiscount = new javax.swing.JLabel();
        roomprice = new javax.swing.JLabel();

        jDialog1.setAlwaysOnTop(true);
        jDialog1.setResizable(false);
        jDialog1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jDialog1MouseDragged(evt);
            }
        });
        jDialog1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jDialog1MousePressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                jPanel2AncestorRemoved(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("SAVE");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, 40, 20));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setText("Room Price:");
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        rprice1.setEditable(false);
        rprice1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rprice1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.add(rprice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 140, -1));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setText("Add Payment:");
        jPanel2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        rtotal2.setEditable(false);
        rtotal2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rtotal2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.add(rtotal2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 140, -1));

        fullname1.setEditable(false);
        fullname1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fullname1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fullname1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.add(fullname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 240, -1));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel27.setText("Full Name:");
        jPanel2.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 60, -1));

        roomno1.setEditable(false);
        roomno1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        roomno1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        roomno1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.add(roomno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 130, -1));

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel28.setText("Room Number:");
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 100, -1));

        pend.setEditable(false);
        pend.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pend.setForeground(new java.awt.Color(88, 168, 105));
        pend.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        pend.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.add(pend, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 100, 20));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setText("Pending Payment:");
        jPanel2.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 100, -1));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel30.setText("Amount Paid:");
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        paid1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paid1KeyTyped(evt);
            }
        });
        jPanel2.add(paid1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 140, -1));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 175, 40, 30));

        paid2.setEditable(false);
        paid2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        paid2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        paid2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paid2ActionPerformed(evt);
            }
        });
        jPanel2.add(paid2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 140, -1));

        tprice1.setEditable(false);
        tprice1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.add(tprice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 90, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("/");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, -1, -1));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel31.setText("Room Total:");
        jPanel2.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Change :");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, -1, -1));

        change.setEditable(false);
        change.setBorder(null);
        jPanel2.add(change, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 80, -1));

        clientid1.setEditable(false);
        clientid1.setForeground(new java.awt.Color(255, 255, 255));
        clientid1.setBorder(null);
        jPanel2.add(clientid1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 850, 210));

        jLabel11.setFont(new java.awt.Font("Microsoft YaHei", 0, 11)); // NOI18N
        jLabel11.setText("Check OUT:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jLabel14.setFont(new java.awt.Font("Microsoft YaHei", 0, 11)); // NOI18N
        jLabel14.setText("Room Number:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, -1, -1));

        jLabel15.setFont(new java.awt.Font("Microsoft YaHei", 0, 11)); // NOI18N
        jLabel15.setText("Amount Paid:");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 170, -1, -1));

        jLabel17.setFont(new java.awt.Font("Microsoft YaHei", 0, 11)); // NOI18N
        jLabel17.setText("Total Room Price:");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 70, -1, -1));

        jLabel18.setFont(new java.awt.Font("Microsoft YaHei", 0, 11)); // NOI18N
        jLabel18.setText("Pending:");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 230, -1, -1));

        jLabel19.setFont(new java.awt.Font("Microsoft YaHei", 0, 11)); // NOI18N
        jLabel19.setText("Gov ID:");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        clientid.setEditable(false);
        clientid.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        clientid.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.add(clientid, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 90, -1));

        jLabel20.setFont(new java.awt.Font("Microsoft YaHei", 0, 11)); // NOI18N
        jLabel20.setText("Check IN:");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        checkOUT.setEditable(false);
        jPanel1.add(checkOUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 160, -1));

        govno.setEditable(false);
        jPanel1.add(govno, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 160, -1));

        checkIN.setEditable(false);
        jPanel1.add(checkIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 160, -1));

        pendingPrice.setEditable(false);
        jPanel1.add(pendingPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 250, 140, -1));

        rprice.setEditable(false);
        jPanel1.add(rprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, 140, -1));

        paid.setEditable(false);
        jPanel1.add(paid, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 190, 140, -1));

        fullname.setEditable(false);
        fullname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(fullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 290, -1));

        jLabel23.setFont(new java.awt.Font("Microsoft YaHei", 0, 11)); // NOI18N
        jLabel23.setText("Full Name:");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 43, -1, -1));

        jLabel5.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel5.setText("/ Check OUT");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        govtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Driver License", "Phil Health", "NBI", "Passport", "National ID", " " }));
        govtype.setEnabled(false);
        jPanel1.add(govtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 160, -1));

        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.setText("Search");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 180, -1));

        btn_refresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh(2).png"))); // NOI18N
        btn_refresh.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_refresh.setContentAreaFilled(false);
        btn_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });
        jPanel1.add(btn_refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 223, -1, -1));

        jLabel24.setFont(new java.awt.Font("Microsoft YaHei", 0, 11)); // NOI18N
        jLabel24.setText("Total Price (Discounted):");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 120, -1, -1));

        rptotal.setEditable(false);
        jPanel1.add(rptotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, 140, -1));

        receiptButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        receiptButton.setText("RECEIPT");
        receiptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptButtonActionPerformed(evt);
            }
        });
        jPanel1.add(receiptButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 100, 40));

        checkOutButton.setBackground(new java.awt.Color(213, 128, 34));
        checkOutButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        checkOutButton.setForeground(new java.awt.Color(255, 255, 255));
        checkOutButton.setText("CHECK OUT");
        checkOutButton.setBorderPainted(false);
        checkOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutButtonActionPerformed(evt);
            }
        });
        jPanel1.add(checkOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 100, 40));

        jLabel4.setText("Client ID:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        roomno.setEditable(false);
        roomno.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        roomno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.add(roomno, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 17, 90, -1));

        receipt.setEditable(false);
        receipt.setColumns(20);
        receipt.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        receipt.setRows(5);
        receipt.setWrapStyleWord(true);
        receipt.setMaximumSize(new java.awt.Dimension(232, 80));
        receipt.setMinimumSize(new java.awt.Dimension(232, 80));
        jScrollPane2.setViewportView(receipt);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, 290, 240));
        jPanel1.add(checkoutDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 290, 40, 20));
        jPanel1.add(roomprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 290, 50, 20));

        jLayeredPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int rowindex = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();
        roomno.setText(""+model.getValueAt(rowindex, 0));
        fullname.setText(""+model.getValueAt(rowindex, 1));
        govtype.setSelectedItem(model.getValueAt(rowindex, 4));
        govno.setText(""+model.getValueAt(rowindex, 5));
        checkIN.setText("" + model.getValueAt(rowindex, 6));
        checkOUT.setText("" + model.getValueAt(rowindex, 7));
        roomprice.setText("" + model.getValueAt(rowindex, 8));
        paid.setText("" + model.getValueAt(rowindex, 9));
        checkoutDiscount.setText(""+ model.getValueAt(rowindex, 10));
        pendingPrice.setText("" + model.getValueAt(rowindex, 11));
        clientid.setText("" + model.getValueAt(rowindex, 13));
       

        try {
            int roomPrice = Integer.parseInt(roomprice.getText());
            int totalRoomPrice = roomPrice * getDays();        
            
            double discount = Double.parseDouble(checkoutDiscount.getText());
            double totalRoomPriceDouble = Double.parseDouble(String.valueOf(totalRoomPrice));
            double discountValue = totalRoomPriceDouble * (discount / 100);
          
            int finalDiscountValue = (int) Math.ceil(discountValue);
            int discounted = totalRoomPrice - finalDiscountValue;
            int amountPaid = Integer.parseInt(paid.getText());
            int pending = discounted - amountPaid;
            
            pendingPrice.setText(String.valueOf(pending));
            rprice.setText(String.valueOf(totalRoomPrice));
            rptotal.setText(String.valueOf(discounted));

            if (pending <= 0){
                checkOutButton.setBackground(new Color(0, 153, 0));
                receiptButton.setVisible(true);
                receipt.setVisible(true);
            }else{
                checkOutButton.setBackground(new Color(213,128,34));
                receiptButton.setVisible(false);
                receipt.setVisible(false);
            }
        } catch (ParseException ex) {
            Logger.getLogger(CheckOUT.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        jTextField1.setText("");
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String filterText = jTextField1.getText().toLowerCase();

        // Remove all rows from the model
        model.setRowCount(0);

        // Add the original rows back to the model
        for (Object[] row : originalData) {
            boolean matches = false;
            for (Object cell : row) {
                if (cell.toString().toLowerCase().contains(filterText)) {
                    matches = true;
                    break;
                }
            }
            if (matches) {
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
       jTable1.setDefaultEditor(Object.class, null);
       
        clientid.setText("");
        fullname.setText("");   
        govtype.setSelectedItem(0);
        govno.setText("");
        checkIN.setText("");
        checkOUT.setText("");
        rprice.setText("");
        rptotal.setText("");
        paid.setText("");
        pendingPrice.setText("");

        checkOutButton.setBackground(new Color(213, 128, 34));     
        receipt.setText("");
        displayData();
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        String paidInput = paid1.getText();
        int amountPaid = Integer.parseInt(paid2.getText());
        int pending = Integer.parseInt(pend.getText());
        
        if(paidInput.isEmpty() && pending > 0){
            JOptionPane.showMessageDialog( null, "Please dont leave payment blank.", "Try Again", JOptionPane.ERROR_MESSAGE); 
        }else{
            JOptionPane optionPane = new JOptionPane(
                    "Sure? Want to Save Changes?",
                    JOptionPane.QUESTION_MESSAGE,
                    JOptionPane.YES_NO_OPTION);
            
            JDialog dialog = optionPane.createDialog("CONFIRMATION");
            
            dialog.setAlwaysOnTop(true);
            dialog.setVisible(true);
            
            
            int result = ((Integer) optionPane.getValue());
               switch (result) {
                   case JOptionPane.YES_OPTION -> {
                      
                      dbc.updateData("Update client set Paid='"+amountPaid+"' where clientid='"+clientid1.getText()+"'");
                   }
                   case JOptionPane.NO_OPTION -> System.out.println("You Selected No");
                   case JOptionPane.CLOSED_OPTION -> System.out.println("You Closed the prompt");
                   default -> {}
               }
        
        jDialog1.dispose();
        }
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        String amountPaidField = paid1.getText().trim();
        int totalPaid = Integer.parseInt(paid2.getText());
        int pendingAmount = Integer.parseInt(pend.getText());
        int totalCost = Integer.parseInt(tprice1.getText());

        if (amountPaidField.isEmpty()) {
            JOptionPane optionPane = new JOptionPane(
                    "Please don't leave the payment field blank.",
                    JOptionPane.ERROR_MESSAGE);

            JDialog dialog = optionPane.createDialog("Try Again");

            dialog.setAlwaysOnTop(true);
            dialog.setVisible(true);

        } else {
            JOptionPane optionPane = new JOptionPane(
                    "Want to add input as payment?",
                    JOptionPane.QUESTION_MESSAGE,
                    JOptionPane.YES_NO_OPTION);

            JDialog dialog = optionPane.createDialog("CONFIRMATION");

            dialog.setAlwaysOnTop(true);
            dialog.setVisible(true);

            int result = ((Integer) optionPane.getValue());
            switch (result) {
                case JOptionPane.YES_OPTION -> {
                    int amountPaid = Integer.parseInt(amountPaidField);
                    int totalpd = totalPaid + amountPaid;
                    int remainingPending = pendingAmount - amountPaid;
                    
                    if(totalpd <= totalCost+1000 && remainingPending < 0){
                        int changeDifference = totalpd - totalCost;
                        System.out.println(changeDifference); // For debugging purposes
                        change.setText(String.valueOf(changeDifference));
                        paid2.setText(String.valueOf(totalpd));
                        pend.setText("0");
                        paid1.setText("");
                    }
                    else if (totalpd > totalCost+1000 && remainingPending < 0) {
                        JOptionPane alert = new JOptionPane(
                                "Change must not exceed total price by 1000.",
                                JOptionPane.ERROR_MESSAGE);
                        
                        JDialog alertDialog = alert.createDialog("CONFIRMATION");
                        alertDialog.setAlwaysOnTop(true);
                        alertDialog.setVisible(true);
                    } else {
                        paid2.setText(String.valueOf(totalpd));
                        pend.setText(String.valueOf(remainingPending));
                        paid1.setText("");
                    }
                }
                case JOptionPane.NO_OPTION ->
                    System.out.println("You Selected No");
                case JOptionPane.CLOSED_OPTION ->
                    System.out.println("You Closed the prompt");
                default -> {
                }
            }
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void paid2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paid2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paid2ActionPerformed

    private void jDialog1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDialog1MouseDragged
        int coordX = evt.getXOnScreen();
        int coordY = evt.getYOnScreen();
        
        jDialog1.setLocation(coordX-mouseX, coordY-mouseY);
    }//GEN-LAST:event_jDialog1MouseDragged

    private void jDialog1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDialog1MousePressed
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_jDialog1MousePressed

    private void checkOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutButtonActionPerformed
        String fname = fullname.getText();
        if (fname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Select A Row.");
        } else {

            int totalCost = Integer.parseInt(rptotal.getText());
            int tptot = Integer.parseInt(pendingPrice.getText());

            if (tptot <= 0) {
                int result = JOptionPane.showConfirmDialog(null, "Fully paid. Want to Check out?", "CONFIRMATION",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                switch (result) {
                    case JOptionPane.YES_OPTION -> {
                        String avail = "Available";
                        String out = "Checked OUT";
                        int clientID = Integer.parseInt(clientid.getText());

                        int pd = Integer.parseInt(paid.getText());
                        int tp = Integer.parseInt(pendingPrice.getText());

                        dbc.updateData("UPDATE room SET status='" + avail + "' where roomnumber='" + roomno.getText() + "' ");
                        dbc.updateData("UPDATE client SET Paid='" + pd + "', TOTAL='" + tp + "', Stat='" + out + "' WHERE clientid='" + clientID + "' ");
                        receipt.setText("");     
                        displayData();
                    }
                    case JOptionPane.NO_OPTION ->
                        System.out.println("You Selected No");
                    case JOptionPane.CLOSED_OPTION ->
                        System.out.println("You Closed the prompt");
                    default -> {
                    }
                }

            } else {
                int rp = Integer.parseInt(rprice.getText());
                int pd = Integer.parseInt(paid.getText());
                int totalprice = totalCost - pd;

                clientid1.setVisible(false);
                clientid1.setText(clientid.getText());
                roomno1.setText(roomno.getText());
                fullname1.setText(fname);
                rprice1.setText(String.valueOf(rp));
                rtotal2.setText(String.valueOf(totalCost));
                tprice1.setText(String.valueOf(totalCost));
                paid2.setText(String.valueOf(pd));
                pend.setText(String.valueOf(totalprice));
                jDialog1.pack();
                jDialog1.setLocationRelativeTo(null);
                jDialog1.setVisible(true);
            }
        }
        
    }//GEN-LAST:event_checkOutButtonActionPerformed

    private void paid1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paid1KeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_paid1KeyTyped

    private void jPanel2AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jPanel2AncestorRemoved
        change.setText("");
        clientid1.setText("");
        roomno1.setText("");
        fullname1.setText("");
        rprice1.setText("");
        rtotal2.setText("");
        tprice1.setText("");
        paid2.setText("");
        pend.setText("");
    }//GEN-LAST:event_jPanel2AncestorRemoved

    private void receiptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptButtonActionPerformed
        String fullName = fullname.getText();
        int firstWord = fullName.indexOf(" ");
        String firstName = fullName.substring(0, firstWord);

        String roomPrice =  roomprice.getText().trim();
        String totalRoomPrice = rprice.getText().trim();
        String roomNumber = roomno.getText();
        int paidAmount = Integer.parseInt(paid.getText().trim());
        int totalDue = Integer.parseInt(rptotal.getText());
        int discountLabel = Integer.parseInt(checkoutDiscount.getText());
        int change  = totalDue - paidAmount;
        java.util.Date date = new java.util.Date();
        
        int result = JOptionPane.showConfirmDialog(null, "Want to generate receipt?", "CONFIRMATION",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        switch (result) {
            case JOptionPane.YES_OPTION -> {               
                          
                double totalRoomPriceDouble = Double.parseDouble(totalRoomPrice);
                double discount = Double.parseDouble(checkoutDiscount.getText().trim());
                double discountValue = totalRoomPriceDouble - (totalRoomPriceDouble*(discount/100)); 
                
                if(discount == 0){
                    discountValue = 0;
                }
                discountGlobal = (int) Math.ceil(discountValue);
                String discountAmount = String.valueOf(discountGlobal);
                if(discountAmount.equals(0)){
                    discountAmount = "0";
                }
                
                receipt.setText("*******************************************************************\n");
                receipt.setText(receipt.getText() + "*                                  CHPATEL HOTEL                            *\n");
                receipt.setText(receipt.getText() + "*******************************************************************\n");
                receipt.setText(receipt.getText() + "                          " + date + "\n\n");
                receipt.setText(receipt.getText() + "                          Room: "+roomNumber+"\n");
                receipt.setText(receipt.getText() + "                          Price: " + roomPrice + "\n");
            try {
                receipt.setText(receipt.getText() + "                          Days: " + getDays() + "\n");
            } catch (ParseException ex) {
                Logger.getLogger(CheckOUT.class.getName()).log(Level.SEVERE, null, ex);
            }
                receipt.setText(receipt.getText() + "                          Sub-total: " + totalRoomPrice + "\n");
                receipt.setText(receipt.getText() + "                          Discount: " + discountAmount + "("+discountLabel+"%)\n");
                receipt.setText(receipt.getText() + "                          TOTAL: " + totalDue + "\n");
                receipt.setText(receipt.getText() + "                          Paid: " + paidAmount + "\n");
                receipt.setText(receipt.getText() + "                          Change: " + abs(change) + "\n\n");
                receipt.setText(receipt.getText() + "                Thank you, and come again, " + firstName + "!");

                
            }
            case JOptionPane.NO_OPTION ->
                System.out.println("You Selected No");
            case JOptionPane.CLOSED_OPTION ->
                System.out.println("You Closed the prompt");
            default -> {
            }
        }
    }//GEN-LAST:event_receiptButtonActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        jTextField1.setText("Search");
    }//GEN-LAST:event_jTextField1FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_refresh;
    private javax.swing.JTextField change;
    private javax.swing.JTextField checkIN;
    private javax.swing.JTextField checkOUT;
    private javax.swing.JButton checkOutButton;
    private javax.swing.JLabel checkoutDiscount;
    private javax.swing.JTextField clientid;
    private javax.swing.JTextField clientid1;
    private javax.swing.JTextField fullname;
    private javax.swing.JTextField fullname1;
    private javax.swing.JTextField govno;
    private javax.swing.JComboBox<String> govtype;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField paid;
    private javax.swing.JTextField paid1;
    private javax.swing.JTextField paid2;
    private javax.swing.JTextField pend;
    private javax.swing.JTextField pendingPrice;
    private javax.swing.JTextArea receipt;
    private javax.swing.JButton receiptButton;
    private javax.swing.JTextField roomno;
    private javax.swing.JTextField roomno1;
    private javax.swing.JLabel roomprice;
    private javax.swing.JTextField rprice;
    private javax.swing.JTextField rprice1;
    private javax.swing.JTextField rptotal;
    private javax.swing.JTextField rtotal2;
    private javax.swing.JTextField tprice1;
    // End of variables declaration//GEN-END:variables
}
